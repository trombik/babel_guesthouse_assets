---
name: Create localized video files from the original and deploy video files to S3 for review
on: pull_request
jobs:
  check_changed_files:
    name: See if change has been made on video files
    id: file_changes
    runs-on: ubuntu-latest
    outputs:
      result:
        description: If true, video file has been modified
    steps:
      - name: Get a list of modified files
        uses: trilom/file-changes-action@v1.2.3
      - name: See if video file is modified
        run: |
          # collect all the modified files
          CHANGED_FILES="${{ steps.file_changes.outputs.files_added }}"
          #"
          CHANGED_FILES="${CHANGED_FILES} ${{ steps.file_changes.outputs.files_modified }}"
          #"

          # set the output to true if files include any files under `video`
          echo "::set-output name=result::false"
          for F in ${CHANGED_FILES}; do
            first_dir=`echo ${F} | cut -d'/' -f1`
            if [ $first_dir == "video" ]; then
              echo "::set-output name=result::true"
            fi
          done
  deploy_to_s3:
    name: Deploy video files to S3
    # run only if video files have been modified
    if: needs.check_changed_files.outputs.result == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install
        # FreeBSD make to run Makefile
        # ffmpeg to burn subtitiles to the original file
        run: sudo apt-get install freebsd-buildutils ffmpeg

      - name: Get a list of modified files
        uses: trilom/file-changes-action@v1.2.3
        id: file_changes

      - name: Build modified video files
        run: |
          CHANGED_FILES="${{ steps.file_changes.outputs.files_added }}"
          #"
          CHANGED_FILES="${CHANGED_FILES} ${{ steps.file_changes.outputs.files_modified }}"
          #"

          # build video files
          for F in ${CHANGED_FILES}; do
            dir=`basedir ${F}`
            fmake -C "${dir}" -m .../Mk all
          done

      - name: Setup AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # SIN
          aws-region: ap-southeast-1

      - name: Create S3 bucket for the PR and upload the files
        run: |
          # create the bucket
          BUCKET_NAME=`echo "${{ github.github.repository_owner }}-${{ github.repository }}-${{github.event.pull_request.number}}" | sed -e 's/[^a-zA-Z0-9-]+/-/g'`
          echo "Creating S3 bucket: `${BUCKET_NAME}`"
          aws s3api create-bucket --bucket \
            --bucket "${BUCKET_NAME}" \
            --acl "public-read" \
            --grant-write "${{ secrets.S3_DEPLOY_USER_NAME }}" \
            --grant-read "${{ secrets.S3_DEPLOY_USER_NAME }}"

          CHANGED_FILES="${{ steps.file_changes.outputs.files_added }}"
          #"
          CHANGED_FILES="${CHANGED_FILES} ${{ steps.file_changes.outputs.files_modified }}"
          #"

          # upload the modified files and created video files
          for F in ${CHANGED_FILES}; do
            SRC=`basedir ${F}`
            DEST="s3://${BUCKET_NAME}/${dir}"
            aws s3 sync "${SRC}/*" "${DEST}" --delete
          done
          # https://my-bucket.s3.us-west-2.amazonaws.com
          BASE_URL="https://${BUCKET_NAME}.s3.ap-southeast-1.amazonaws.com"
          URLS=""
          for F in ${CHANGED_FILES}; do
            URLS="$URLS ${BASE_URL}/${F}"
          done
          # XXX NOT used yet
          echo "::set-output name=URLS::${URLS}"

  destroy_s3_bucket:
    name: Destroy the bucket upon closed
    runs-on: ubuntu-latest
    if: github.event.pull_request.closed == true
    steps:
      - name: Setup AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # SIN
          aws-region: ap-southeast-1

      - name: Destroy S3 bucket for the PR
        run: |
          BUCKET_NAME=`echo "${{ github.github.repository_owner }}-${{ github.repository }}-${{github.event.pull_request.number}}" | sed -e 's/[^a-zA-Z0-9-]+/-/g'`
          echo "Destroying S3 bucket: `${BUCKET_NAME}`"
          # `aws s3 rb` only works if versioning is NOT enabled
          # https://docs.aws.amazon.com/AmazonS3/latest/dev/delete-or-empty-bucket.html#delete-bucket-awscli
          aws s3 rb "s3://${BUCKET_NAME}" --force
